//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationEF.Diagrama
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TICEntities1 : DbContext
    {
        public TICEntities1()
            : base("name=TICEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Apartado> Apartado { get; set; }
        public virtual DbSet<Asignatura> Asignatura { get; set; }
        public virtual DbSet<Blacklist> Blacklist { get; set; }
        public virtual DbSet<Calendario> Calendario { get; set; }
        public virtual DbSet<DetalleBlacklist> DetalleBlacklist { get; set; }
        public virtual DbSet<DetalleExamen> DetalleExamen { get; set; }
        public virtual DbSet<Docente> Docente { get; set; }
        public virtual DbSet<Examen> Examen { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<Leccion> Leccion { get; set; }
        public virtual DbSet<Maquina> Maquina { get; set; }
        public virtual DbSet<Responsable> Responsable { get; set; }
        public virtual DbSet<Turno> Turno { get; set; }
        public virtual DbSet<list_apartado> list_apartado { get; set; }
        public virtual DbSet<list_asignatura> list_asignatura { get; set; }
        public virtual DbSet<list_blacklist> list_blacklist { get; set; }
        public virtual DbSet<list_calendario> list_calendario { get; set; }
        public virtual DbSet<list_detalleblacklist> list_detalleblacklist { get; set; }
        public virtual DbSet<list_detalleexamen> list_detalleexamen { get; set; }
        public virtual DbSet<list_docente> list_docente { get; set; }
        public virtual DbSet<list_examen> list_examen { get; set; }
        public virtual DbSet<list_grupo> list_grupo { get; set; }
        public virtual DbSet<list_leccion> list_leccion { get; set; }
        public virtual DbSet<list_maquina> list_maquina { get; set; }
        public virtual DbSet<list_responsable> list_responsable { get; set; }
        public virtual DbSet<list_turno> list_turno { get; set; }
    
        public virtual int insert_apartado(Nullable<int> numApartado, Nullable<int> numCalendario, string codDocente, string codGrupo, Nullable<int> bloque, string tipoBloque)
        {
            var numApartadoParameter = numApartado.HasValue ?
                new ObjectParameter("NumApartado", numApartado) :
                new ObjectParameter("NumApartado", typeof(int));
    
            var numCalendarioParameter = numCalendario.HasValue ?
                new ObjectParameter("NumCalendario", numCalendario) :
                new ObjectParameter("NumCalendario", typeof(int));
    
            var codDocenteParameter = codDocente != null ?
                new ObjectParameter("CodDocente", codDocente) :
                new ObjectParameter("CodDocente", typeof(string));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var bloqueParameter = bloque.HasValue ?
                new ObjectParameter("Bloque", bloque) :
                new ObjectParameter("Bloque", typeof(int));
    
            var tipoBloqueParameter = tipoBloque != null ?
                new ObjectParameter("TipoBloque", tipoBloque) :
                new ObjectParameter("TipoBloque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_apartado", numApartadoParameter, numCalendarioParameter, codDocenteParameter, codGrupoParameter, bloqueParameter, tipoBloqueParameter);
        }
    
        public virtual int insert_asignatura(string codAsignatura, string nombre)
        {
            var codAsignaturaParameter = codAsignatura != null ?
                new ObjectParameter("CodAsignatura", codAsignatura) :
                new ObjectParameter("CodAsignatura", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_asignatura", codAsignaturaParameter, nombreParameter);
        }
    
        public virtual int insert_blacklist(Nullable<int> numBlacklist, string codResponsable, string causa, Nullable<System.DateTime> sanción, Nullable<int> bloque)
        {
            var numBlacklistParameter = numBlacklist.HasValue ?
                new ObjectParameter("NumBlacklist", numBlacklist) :
                new ObjectParameter("NumBlacklist", typeof(int));
    
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var causaParameter = causa != null ?
                new ObjectParameter("Causa", causa) :
                new ObjectParameter("Causa", typeof(string));
    
            var sanciónParameter = sanción.HasValue ?
                new ObjectParameter("Sanción", sanción) :
                new ObjectParameter("Sanción", typeof(System.DateTime));
    
            var bloqueParameter = bloque.HasValue ?
                new ObjectParameter("Bloque", bloque) :
                new ObjectParameter("Bloque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_blacklist", numBlacklistParameter, codResponsableParameter, causaParameter, sanciónParameter, bloqueParameter);
        }
    
        public virtual int insert_calendario(Nullable<int> numCalendario, string codTurno, Nullable<System.DateTime> fecha)
        {
            var numCalendarioParameter = numCalendario.HasValue ?
                new ObjectParameter("NumCalendario", numCalendario) :
                new ObjectParameter("NumCalendario", typeof(int));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_calendario", numCalendarioParameter, codTurnoParameter, fechaParameter);
        }
    
        public virtual int insert_detalleblacklist(Nullable<int> numBlacklist, string codGrupo, string codTurno, string nombre, string apellido)
        {
            var numBlacklistParameter = numBlacklist.HasValue ?
                new ObjectParameter("NumBlacklist", numBlacklist) :
                new ObjectParameter("NumBlacklist", typeof(int));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_detalleblacklist", numBlacklistParameter, codGrupoParameter, codTurnoParameter, nombreParameter, apellidoParameter);
        }
    
        public virtual int insert_detalleexamen(Nullable<int> numExamen, Nullable<int> numMaquina, string estado, string desperfecto)
        {
            var numExamenParameter = numExamen.HasValue ?
                new ObjectParameter("NumExamen", numExamen) :
                new ObjectParameter("NumExamen", typeof(int));
    
            var numMaquinaParameter = numMaquina.HasValue ?
                new ObjectParameter("NumMaquina", numMaquina) :
                new ObjectParameter("NumMaquina", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var desperfectoParameter = desperfecto != null ?
                new ObjectParameter("Desperfecto", desperfecto) :
                new ObjectParameter("Desperfecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_detalleexamen", numExamenParameter, numMaquinaParameter, estadoParameter, desperfectoParameter);
        }
    
        public virtual int insert_docente(string codDocente, string cedula, string nombre, string apellido, Nullable<int> celular)
        {
            var codDocenteParameter = codDocente != null ?
                new ObjectParameter("CodDocente", codDocente) :
                new ObjectParameter("CodDocente", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_docente", codDocenteParameter, cedulaParameter, nombreParameter, apellidoParameter, celularParameter);
        }
    
        public virtual int insert_examen(Nullable<int> numExamen, string codResponsable, string tipoMantenimiento, string justificacion)
        {
            var numExamenParameter = numExamen.HasValue ?
                new ObjectParameter("NumExamen", numExamen) :
                new ObjectParameter("NumExamen", typeof(int));
    
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var tipoMantenimientoParameter = tipoMantenimiento != null ?
                new ObjectParameter("TipoMantenimiento", tipoMantenimiento) :
                new ObjectParameter("TipoMantenimiento", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_examen", numExamenParameter, codResponsableParameter, tipoMantenimientoParameter, justificacionParameter);
        }
    
        public virtual int insert_grupo(string codGrupo, string nombre)
        {
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_grupo", codGrupoParameter, nombreParameter);
        }
    
        public virtual int insert_leccion(Nullable<int> numApartado, string codAsignatura, Nullable<int> cantHombre, Nullable<int> cantMujer)
        {
            var numApartadoParameter = numApartado.HasValue ?
                new ObjectParameter("NumApartado", numApartado) :
                new ObjectParameter("NumApartado", typeof(int));
    
            var codAsignaturaParameter = codAsignatura != null ?
                new ObjectParameter("CodAsignatura", codAsignatura) :
                new ObjectParameter("CodAsignatura", typeof(string));
    
            var cantHombreParameter = cantHombre.HasValue ?
                new ObjectParameter("CantHombre", cantHombre) :
                new ObjectParameter("CantHombre", typeof(int));
    
            var cantMujerParameter = cantMujer.HasValue ?
                new ObjectParameter("CantMujer", cantMujer) :
                new ObjectParameter("CantMujer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_leccion", numApartadoParameter, codAsignaturaParameter, cantHombreParameter, cantMujerParameter);
        }
    
        public virtual int insert_maquina(Nullable<int> numMaquina, string fabricante, string modelo, string cPU, Nullable<int> rAM, string gPU, Nullable<int> hDD)
        {
            var numMaquinaParameter = numMaquina.HasValue ?
                new ObjectParameter("NumMaquina", numMaquina) :
                new ObjectParameter("NumMaquina", typeof(int));
    
            var fabricanteParameter = fabricante != null ?
                new ObjectParameter("Fabricante", fabricante) :
                new ObjectParameter("Fabricante", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var cPUParameter = cPU != null ?
                new ObjectParameter("CPU", cPU) :
                new ObjectParameter("CPU", typeof(string));
    
            var rAMParameter = rAM.HasValue ?
                new ObjectParameter("RAM", rAM) :
                new ObjectParameter("RAM", typeof(int));
    
            var gPUParameter = gPU != null ?
                new ObjectParameter("GPU", gPU) :
                new ObjectParameter("GPU", typeof(string));
    
            var hDDParameter = hDD.HasValue ?
                new ObjectParameter("HDD", hDD) :
                new ObjectParameter("HDD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_maquina", numMaquinaParameter, fabricanteParameter, modeloParameter, cPUParameter, rAMParameter, gPUParameter, hDDParameter);
        }
    
        public virtual int insert_responsable(string codResponsable, string codTurno, string cedula, string nombre, string apellido, Nullable<int> celular)
        {
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_responsable", codResponsableParameter, codTurnoParameter, cedulaParameter, nombreParameter, apellidoParameter, celularParameter);
        }
    
        public virtual int insert_turno(string codTurno, string titulo, Nullable<System.TimeSpan> horaEntrada, Nullable<System.TimeSpan> horaSalida)
        {
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var horaEntradaParameter = horaEntrada.HasValue ?
                new ObjectParameter("HoraEntrada", horaEntrada) :
                new ObjectParameter("HoraEntrada", typeof(System.TimeSpan));
    
            var horaSalidaParameter = horaSalida.HasValue ?
                new ObjectParameter("HoraSalida", horaSalida) :
                new ObjectParameter("HoraSalida", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_turno", codTurnoParameter, tituloParameter, horaEntradaParameter, horaSalidaParameter);
        }
    
        public virtual int modificar_apartado(Nullable<int> numApartado, Nullable<int> numCalendario, string codDocente, string codGrupo, Nullable<int> bloque, string tipoBloque)
        {
            var numApartadoParameter = numApartado.HasValue ?
                new ObjectParameter("NumApartado", numApartado) :
                new ObjectParameter("NumApartado", typeof(int));
    
            var numCalendarioParameter = numCalendario.HasValue ?
                new ObjectParameter("NumCalendario", numCalendario) :
                new ObjectParameter("NumCalendario", typeof(int));
    
            var codDocenteParameter = codDocente != null ?
                new ObjectParameter("CodDocente", codDocente) :
                new ObjectParameter("CodDocente", typeof(string));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var bloqueParameter = bloque.HasValue ?
                new ObjectParameter("Bloque", bloque) :
                new ObjectParameter("Bloque", typeof(int));
    
            var tipoBloqueParameter = tipoBloque != null ?
                new ObjectParameter("TipoBloque", tipoBloque) :
                new ObjectParameter("TipoBloque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_apartado", numApartadoParameter, numCalendarioParameter, codDocenteParameter, codGrupoParameter, bloqueParameter, tipoBloqueParameter);
        }
    
        public virtual int modificar_asignatura(string codAsignatura, string nombre)
        {
            var codAsignaturaParameter = codAsignatura != null ?
                new ObjectParameter("CodAsignatura", codAsignatura) :
                new ObjectParameter("CodAsignatura", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_asignatura", codAsignaturaParameter, nombreParameter);
        }
    
        public virtual int modificar_blacklist(Nullable<int> numBlacklist, string codResponsable, string causa, Nullable<System.DateTime> sanción, Nullable<int> bloque)
        {
            var numBlacklistParameter = numBlacklist.HasValue ?
                new ObjectParameter("NumBlacklist", numBlacklist) :
                new ObjectParameter("NumBlacklist", typeof(int));
    
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var causaParameter = causa != null ?
                new ObjectParameter("Causa", causa) :
                new ObjectParameter("Causa", typeof(string));
    
            var sanciónParameter = sanción.HasValue ?
                new ObjectParameter("Sanción", sanción) :
                new ObjectParameter("Sanción", typeof(System.DateTime));
    
            var bloqueParameter = bloque.HasValue ?
                new ObjectParameter("Bloque", bloque) :
                new ObjectParameter("Bloque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_blacklist", numBlacklistParameter, codResponsableParameter, causaParameter, sanciónParameter, bloqueParameter);
        }
    
        public virtual int modificar_calendario(Nullable<int> numCalendario, string codTurno, Nullable<System.DateTime> fecha)
        {
            var numCalendarioParameter = numCalendario.HasValue ?
                new ObjectParameter("NumCalendario", numCalendario) :
                new ObjectParameter("NumCalendario", typeof(int));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_calendario", numCalendarioParameter, codTurnoParameter, fechaParameter);
        }
    
        public virtual int modificar_detalleblacklist(Nullable<int> idDetalleBlacklist, string codGrupo, string codTurno, string nombre, string apellido)
        {
            var idDetalleBlacklistParameter = idDetalleBlacklist.HasValue ?
                new ObjectParameter("IdDetalleBlacklist", idDetalleBlacklist) :
                new ObjectParameter("IdDetalleBlacklist", typeof(int));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_detalleblacklist", idDetalleBlacklistParameter, codGrupoParameter, codTurnoParameter, nombreParameter, apellidoParameter);
        }
    
        public virtual int modificar_detalleexamen(Nullable<int> idDetalleExamen, Nullable<int> numExamen, Nullable<int> numMaquina, string estado, string desperfecto)
        {
            var idDetalleExamenParameter = idDetalleExamen.HasValue ?
                new ObjectParameter("IdDetalleExamen", idDetalleExamen) :
                new ObjectParameter("IdDetalleExamen", typeof(int));
    
            var numExamenParameter = numExamen.HasValue ?
                new ObjectParameter("NumExamen", numExamen) :
                new ObjectParameter("NumExamen", typeof(int));
    
            var numMaquinaParameter = numMaquina.HasValue ?
                new ObjectParameter("NumMaquina", numMaquina) :
                new ObjectParameter("NumMaquina", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var desperfectoParameter = desperfecto != null ?
                new ObjectParameter("Desperfecto", desperfecto) :
                new ObjectParameter("Desperfecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_detalleexamen", idDetalleExamenParameter, numExamenParameter, numMaquinaParameter, estadoParameter, desperfectoParameter);
        }
    
        public virtual int modificar_docente(string codDocente, string cedula, string nombre, string apellido, Nullable<int> celular)
        {
            var codDocenteParameter = codDocente != null ?
                new ObjectParameter("CodDocente", codDocente) :
                new ObjectParameter("CodDocente", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_docente", codDocenteParameter, cedulaParameter, nombreParameter, apellidoParameter, celularParameter);
        }
    
        public virtual int modificar_examen(Nullable<int> numExamen, string codResponsable, string tipoMantenimiento, string justificacion)
        {
            var numExamenParameter = numExamen.HasValue ?
                new ObjectParameter("NumExamen", numExamen) :
                new ObjectParameter("NumExamen", typeof(int));
    
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var tipoMantenimientoParameter = tipoMantenimiento != null ?
                new ObjectParameter("TipoMantenimiento", tipoMantenimiento) :
                new ObjectParameter("TipoMantenimiento", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_examen", numExamenParameter, codResponsableParameter, tipoMantenimientoParameter, justificacionParameter);
        }
    
        public virtual int modificar_grupo(string codGrupo, string nombre)
        {
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("CodGrupo", codGrupo) :
                new ObjectParameter("CodGrupo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_grupo", codGrupoParameter, nombreParameter);
        }
    
        public virtual int modificar_leccion(Nullable<int> numLeccion, Nullable<int> numApartado, string codAsignatura, Nullable<int> cantHombre, Nullable<int> cantMujer)
        {
            var numLeccionParameter = numLeccion.HasValue ?
                new ObjectParameter("NumLeccion", numLeccion) :
                new ObjectParameter("NumLeccion", typeof(int));
    
            var numApartadoParameter = numApartado.HasValue ?
                new ObjectParameter("NumApartado", numApartado) :
                new ObjectParameter("NumApartado", typeof(int));
    
            var codAsignaturaParameter = codAsignatura != null ?
                new ObjectParameter("CodAsignatura", codAsignatura) :
                new ObjectParameter("CodAsignatura", typeof(string));
    
            var cantHombreParameter = cantHombre.HasValue ?
                new ObjectParameter("CantHombre", cantHombre) :
                new ObjectParameter("CantHombre", typeof(int));
    
            var cantMujerParameter = cantMujer.HasValue ?
                new ObjectParameter("CantMujer", cantMujer) :
                new ObjectParameter("CantMujer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_leccion", numLeccionParameter, numApartadoParameter, codAsignaturaParameter, cantHombreParameter, cantMujerParameter);
        }
    
        public virtual int modificar_maquina(Nullable<int> numMaquina, string fabricante, string modelo, string cPU, Nullable<int> rAM, string gPU, Nullable<int> hDD)
        {
            var numMaquinaParameter = numMaquina.HasValue ?
                new ObjectParameter("NumMaquina", numMaquina) :
                new ObjectParameter("NumMaquina", typeof(int));
    
            var fabricanteParameter = fabricante != null ?
                new ObjectParameter("Fabricante", fabricante) :
                new ObjectParameter("Fabricante", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var cPUParameter = cPU != null ?
                new ObjectParameter("CPU", cPU) :
                new ObjectParameter("CPU", typeof(string));
    
            var rAMParameter = rAM.HasValue ?
                new ObjectParameter("RAM", rAM) :
                new ObjectParameter("RAM", typeof(int));
    
            var gPUParameter = gPU != null ?
                new ObjectParameter("GPU", gPU) :
                new ObjectParameter("GPU", typeof(string));
    
            var hDDParameter = hDD.HasValue ?
                new ObjectParameter("HDD", hDD) :
                new ObjectParameter("HDD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_maquina", numMaquinaParameter, fabricanteParameter, modeloParameter, cPUParameter, rAMParameter, gPUParameter, hDDParameter);
        }
    
        public virtual int modificar_responsable(string codResponsable, string codTurno, string cedula, string nombre, string apellido, Nullable<int> celular)
        {
            var codResponsableParameter = codResponsable != null ?
                new ObjectParameter("CodResponsable", codResponsable) :
                new ObjectParameter("CodResponsable", typeof(string));
    
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_responsable", codResponsableParameter, codTurnoParameter, cedulaParameter, nombreParameter, apellidoParameter, celularParameter);
        }
    
        public virtual int modificar_turno(string codTurno, string titulo, Nullable<System.TimeSpan> horaEntrada, Nullable<System.TimeSpan> horaSalida)
        {
            var codTurnoParameter = codTurno != null ?
                new ObjectParameter("CodTurno", codTurno) :
                new ObjectParameter("CodTurno", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var horaEntradaParameter = horaEntrada.HasValue ?
                new ObjectParameter("HoraEntrada", horaEntrada) :
                new ObjectParameter("HoraEntrada", typeof(System.TimeSpan));
    
            var horaSalidaParameter = horaSalida.HasValue ?
                new ObjectParameter("HoraSalida", horaSalida) :
                new ObjectParameter("HoraSalida", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_turno", codTurnoParameter, tituloParameter, horaEntradaParameter, horaSalidaParameter);
        }
    }
}
